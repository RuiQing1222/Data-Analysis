select 
ta1.task_group_id as '任务组ID', 
case ta1.task_group_id
when '100201'  then '熟悉小镇 '
when '100203'  then '找到牲畜 '
when '100204'  then '收获牛奶 '
when '100301'  then '照顾牲畜 '
when '100401'  then '前往睡美人森林 '
when '201101'  then '打开秋季灌木 '
when '201102'  then '修复桥梁 '
when '201103'  then '除草 '
when '201104'  then '使用炸弹 '
when '201105'  then '打开障碍 '
when '201106'  then '寻找浆果 '
when '201107'  then '采集浆果 '
when '201108'  then '回家瞅瞅 '
when '201109'  then '向前开路 '
when '201110'  then '修复雕像 '
when '201111'  then '魔力玫瑰 '
when '201112'  then '修复月亮井 '
when '201113'  then '开启障碍 '
when '201114'  then '生命宝石 '
when '201115'  then '唤醒睡美人 '
when '201117'  then '探索隐藏区域 '
when '201116'  then '寻求帮助(回家园） '
when '201200'  then '前往树精之地 '
when '201201'  then '大树精克林特 '
when '201202'  then '收藏品套装 '
when '201203'  then '精灵妮可 '
when '201204'  then '妮可的任务 '
when '201205'  then '饕餮野味 '
when '201206'  then '物产丰富 '
when '201207'  then '精灵克莱 '
when '201208'  then '克莱的心愿 '
when '201209'  then '穿越树精之地 '
when '201210'  then '沉睡山脉 '
when '201300'  then '投石问路 '
when '201301'  then '商人的回报 '
when '201302'  then '万能魔镜 '
when '201303'  then '修复魔镜框架 '
when '201314'  then '修复魔镜镜面 '
when '201305'  then '修复石梯 '
when '201306'  then '魔豆藤 '
when '201307'  then '生命药剂 '
when '201308'  then '神奇坩埚 '
when '201309'  then '挖掘生命之花 '
when '201310'  then '力挽狂澜 '
when '201312'  then '回到家园 '
when '201311'  then '海底危机 '
when '202101'  then '大搜查 '
when '202102'  then '探查真相 '
when '202103'  then '大门紧闭 '
when '202104'  then '探查真相 '
when '202106'  then '大门紧闭 '
when '202107'  then '探查真相 '
when '202108'  then '庭院入口 '
when '202109'  then '人鱼庭院 '
when '202201'  then '与欧若拉的初次相识 '
when '202202'  then '再次相逢 '
when '202203'  then '月光海星 '
when '202205'  then '珍珠灯 '
when '202204'  then '七彩海葵 '
when '202207'  then '大沉船 '
when '202206'  then '智慧海螺 '
when '202209'  then '珍珠灯 '
when '202208'  then '复原核心 '
when '202211'  then '珍珠灯 '
when '202210'  then '神秘雕像 '
when '202212'  then '真相大白 '
when '202301'  then '炼金台 '
when '202302'  then '魔杖材料 '
when '202303'  then '魔杖 '
when '202304'  then '驯化海龟 '
when '202305'  then '追上欧若拉 '
when '202306'  then '找到安德鲁 '
when '202316'  then '表白 '
when '202307'  then '商船 '
when '202308'  then '找到格蕾丝 '
when '202309'  then '纺织材料 '
when '202310'  then '生产绸带 '
when '202311'  then '淡水 '
when '202312'  then '老船长 '
when '202313'  then '航海地图 '
when '202314'  then '装船启航 '
when '202315'  then '前往圣岛 '
when '202401'  then '投石问路 '
when '202402'  then '商人的包裹 '
when '202404'  then '钓竿 '
when '202419'  then '鱼饵 '
when '202405'  then '放长线钓大鱼 '
when '202403'  then '精灵石门 '
when '202406'  then '海洋精灵祭坛 '
when '202407'  then '召唤精灵 '
when '202418'  then '打开精灵石门 '
when '202408'  then '找到魔法竖琴 '
when '202409'  then '修复魔法竖琴1 '
when '202410'  then '修复断桥 '
when '202420'  then '找到魔法竖琴2 '
when '202412'  then '修复魔法竖琴2 '
when '202415'  then '消灭乌贼 '
when '202421'  then '找到魔法竖琴3 '
when '202414'  then '修复魔法竖琴3 '
when '202416'  then '回到家园 '
when '202417'  then '前往魔泉岛 '
when '202501'  then '寻找人鱼之池 '
when '202502'  then '简单修补 '
when '202503'  then '红色大门后的泉水 '
when '202504'  then '继续修复 '
when '202505'  then '蓝色大门后的泉水 '
when '202511'  then '注入魔泉水 '
when '202510'  then '打开花园之门 '
when '202507'  then '幻想之花 '
when '202508'  then '完成最终仪式 '
when '202509'  then '回到家园 '
when '202512'  then '前往白雪镇 '
when '203101'  then '找到哈斯克警长 '
when '203102'  then '去往白雪镇外 '
when '203103'  then '蛛丝马迹 '
when '203104'  then '破解幻影迷宫 '
when '203105'  then '回忆幻影 '
when '203117'  then '找到格尔达 '
when '203118'  then '制作蘑菇汤 '
when '203121'  then '将蘑菇汤交给小女孩 '
when '203106'  then '救出被冰封的人 '
when '203114'  then '蛛丝马迹 '
when '203107'  then '破解幻影迷宫 '
when '203108'  then '回忆幻影 '
when '203115'  then '蛛丝马迹 '
when '203109'  then '破解幻影迷宫 '
when '203110'  then '回忆幻影 '
when '203116'  then '蛛丝马迹 '
when '203111'  then '破解幻影迷宫 '
when '203112'  then '回忆幻影 '
when '203113'  then '前往回忆山峰 '
when '203201'  then '找到女巫住所 '
when '203202'  then '通过麦格的试炼 '
when '203203'  then '向鹿询问上山的路-驯化鹿 '
when '203204'  then '找到雪人 '
when '203205'  then '向雪人询问上山的路 '
when '203206'  then '制作冰柱上山-第二层 '
when '203207'  then '继续前进-遇到第一个巨人 '
when '203208'  then '修复避雪柱-修复第一个避雪柱 '
when '203209'  then '驯化巨人1 '
when '203210'  then '继续前进-遇到第二个巨人 '
when '203211'  then '驯化巨人2-修复第二个避雪柱 '
when '203222'  then '驯化冰雪守卫（第2个） '
when '203213'  then '继续前进-遇到冰玫瑰 '
when '203214'  then '采集冰玫瑰 '
when '203215'  then '继续前进-遇到第三个巨人 '
when '203216'  then '驯化巨人3-修复第3个避雪柱 '
when '203223'  then '驯化冰雪守卫（第3个） '
when '203224'  then '继续前进-到第2个冰梯 '
when '203217'  then '制作冰柱上山-顶层 '
when '203218'  then '找到记忆宝珠 '
when '203219'  then '制作魔盒-麦格女巫处 '
when '203221'  then '前往巨熊山谷 '
when '203301'  then '线索 '
when '203302'  then '断桥 '
when '203309'  then '继续追踪 '
when '203303'  then '生火做饭 '
when '203310'  then '继续追踪 '
when '203312'  then '继续追踪 '
when '203304'  then '断桥 '
when '203311'  then '继续追踪 '
when '203305'  then '熊身拔毛 '
when '203306'  then '变化药剂 '
when '203313'  then '准备出发 '
when '203308'  then '前往静河 '
when '203401'  then '寻找哈斯曼 '
when '203402'  then '筹备晚餐 '
when '203403'  then '修复桥梁 '
when '203404'  then '寻找修桥工具 '
when '203405'  then '寻找邮箱 '
when '203406'  then '将信件交付给哈斯曼 '
when '203410'  then '寻鹿人 '
when '203411'  then '消灭野狼 '
when '203412'  then '寻鹿人 '
when '203407'  then '寻鹿人 '
when '203408'  then '前往冰雪城堡 '
end as '任务组名称',
ta1.task_id as '任务ID', 
case ta1.task_id 
when '1002011' then '收获耕地中成熟的6豌豆 '
when '1002012' then '在耕地中种植6豌豆 '
when '1002013' then '完成1个猫头鹰订单板上的订单 '
when '1002031' then '打破栅栏门继续前进 '
when '1002041' then '在养牛场收获3牛奶 '
when '1003011' then '在耕地中种植6小麦 '
when '1003012' then '收获耕地中成熟的6小麦 '
when '1003013' then '在谷仓中用小麦制作1份草垛 '
when '1004011' then '前往睡美人森林 '
when '2011011' then '清除拦路的灌木 '
when '2011021' then '修复桥梁 '
when '2011031' then '清除杂草 '
when '2011041' then '打开宝箱 '
when '2011042' then '使用炸弹 '
when '2011051' then '清除拦路的灌木 '
when '2011061' then '寻找浆果 '
when '2011071' then '采集浆果 '
when '2011081' then '回到家园 '
when '2011091' then '采集杂草 '
when '2011092' then '采集蓝色花丛 '
when '2011101' then '让精灵雕像恢复如初 '
when '2011111' then '进入魔力花园 '
when '2011112' then '收集魔力玫瑰 '
when '2011121' then '修复月亮井 '
when '2011131' then '清除拦路的灌木 '
when '2011141' then '获得生命宝石 '
when '2011151' then '唤醒睡美人 '
when '2011171' then '探索隐藏区域 '
when '2011161' then '寻求帮助 '
when '2011191' then '进入树精之地 '
when '2012001' then '找到树精 '
when '2012011' then '发现并收集陶罐 '
when '2012012' then '兑换一次收藏奖励 '
when '2012021' then '找到妮可 '
when '2012031' then '修复倾倒的花坛 '
when '2012041' then '继续前进 '
when '2012042' then '挖5颗灌木 '
when '2012043' then '挖5个蘑菇 '
when '2012051' then '找到樱桃树林 '
when '2012061' then '找到克莱 '
when '2012071' then '修复毛球雕像 '
when '2012081' then '找到石梯 '
when '2012091' then '进入沉睡山脉 '
when '2013001' then '找到附近的商人 '
when '2013012' then '找到蓝花 '
when '2013011' then '采集8株蓝花 '
when '2013021' then '按商人的指引找到魔镜 '
when '2013031' then '设法修复魔镜框架 '
when '2013032' then '寻找精灵之木 '
when '2013035' then '设法修复魔镜镜面 '
when '2013036' then '收集3枚晶钻 '
when '2013051' then '设法修复上山的石梯 '
when '2013061' then '继续向山上前进，寻找魔镜说的线索 '
when '2013071' then '使用生命药剂催生魔豆藤 '
when '2013081' then '找到维克多留下的坩埚 '
when '2013093' then '敲碎堵路的大石 '
when '2013091' then '采集15束生命之花 '
when '2013092' then '利用坩埚制作生命药剂 '
when '2013101' then '尽快找到格蕾丝公主 '
when '2013121' then '回到镇子 '
when '2013111' then '前往人鱼海峡 '
when '2021011' then '搜查梅林所说黑魔法的线索 '
when '2021021' then '追上欧若拉 '
when '2021022' then '设法打开石门 '
when '2021031' then '追上欧若拉 '
when '2021032' then '设法打开石门 '
when '2021051' then '追上欧若拉 '
when '2021052' then '设法打开石门 '
when '2021061' then '追上欧若拉 '
when '2021062' then '设法打开石门 '
when '2021072' then '收集3颗大珍珠 '
when '2021071' then '设法打开庭院大门 '
when '2021121' then '进入人鱼庭院 '
when '2022001' then '找到欧若拉的住所 '
when '2022002' then '敲门并与欧若拉相识 '
when '2022011' then '跟随欧若拉，取得信任 '
when '2022021' then '采集海星*5 '
when '2022022' then '制作月光海星 '
when '2022042' then '采集6个荧光海沙 '
when '2022043' then '生产2个荧光珍珠 '
when '2022041' then '点亮珍珠灯，照亮前方的迷雾 '
when '2022031' then '寻找七彩坩埚 '
when '2022032' then '采集海葵*5 '
when '2022033' then '制作七彩海葵 '
when '2022061' then '修复沉船 '
when '2022051' then '寻找智慧坩埚 '
when '2022052' then '采集海螺*5 '
when '2022053' then '制作智慧海螺 '
when '2022082' then '采集6个荧光海沙 '
when '2022083' then '生产2个荧光珍珠 '
when '2022081' then '点亮珍珠灯，照亮前方的迷雾 '
when '2022071' then '找到万能坩埚 '
when '2022072' then '制作复原核心 '
when '2022102' then '采集6个荧光海沙 '
when '2022103' then '生产2个荧光珍珠 '
when '2022101' then '点亮珍珠灯，照亮前方的迷雾 '
when '2022091' then '找到雕像 '
when '2022092' then '修复雕像 '
when '2022111' then '前往月牙森林 '
when '2023011' then '找到炼金台 '
when '2023022' then '找到木蜡油 '
when '2023023' then '找到龙角 '
when '2023021' then '找到冬青木 '
when '2023031' then '制作魔杖 '
when '2023041' then '驯化海龟 '
when '2023051' then '找到欧若拉 '
when '2023061' then '找到安德鲁 '
when '2023161' then '找到欧若拉（表白任务） '
when '2023071' then '去码头 '
when '2023081' then '找到格蕾丝 '
when '2023091' then '采集桑树 '
when '2023101' then '生产绸带 '
when '2023111' then '找到月亮井 '
when '2023112' then '获得月之水 '
when '2023121' then '找到老船长 '
when '2023131' then '找到旧礼帽 '
when '2023132' then '换取航海地图 '
when '2023141' then '将货物装船 '
when '2023151' then '前往圣岛 '
when '2024011' then '找到商人 '
when '2024021' then '收集商人的包裹 '
when '2024043' then '生产钓竿 '
when '2024045' then '采集香草 '
when '2024046' then '生产鱼饵 '
when '2024051' then '为毛球钓条鱼 '
when '2024052' then '利用篝火制作烤鱼 '
when '2024031' then '找到精灵石门 '
when '2024061' then '找到祭坛 '
when '2024071' then '收集所有符文石 '
when '2024072' then '用符文石修建海洋精灵祭坛 '
when '2024181' then '打开精灵石门 '
when '2024081' then '找到魔法竖琴1 '
when '2024091' then '修复魔法竖琴1 '
when '2024101' then '修复断桥 '
when '2024111' then '找到魔法竖琴2 '
when '2024121' then '修复魔法竖琴2 '
when '2024151' then '消灭乌贼 '
when '2024131' then '找到魔法竖琴3 '
when '2024141' then '修复魔法竖琴3 '
when '2024161' then '回到家园 '
when '2024171' then '前往魔泉岛 '
when '2025011' then '向前探索，寻找人鱼之池 '
when '2025021' then '修建人鱼之池 '
when '2025031' then '寻找玫红石 '
when '2025032' then '将玫红石放在底座上 '
when '2025041' then '收集魔泉水 '
when '2025042' then '继续修复人鱼之池 '
when '2025051' then '寻找海蓝石 '
when '2025052' then '将海蓝石放置在底座上 '
when '2025081' then '取得更多魔泉水 '
when '2025131' then '再次注入魔泉水，修复人鱼之池 '
when '2025072' then '寻找沙黄石 '
when '2025073' then '将沙黄石放在底座上 '
when '2025084' then '前往精灵花园 '
when '2025082' then '取得幻想之花 '
when '2025083' then '将人鱼之池修复完成，开始最终仪式 '
when '2025091' then '回到童话镇看看有什么新鲜事吧 '
when '2025141' then '前往白雪镇 '
when '2031011' then '找到哈斯克警长 '
when '2031021' then '去往白雪镇外 '
when '2031031' then '蛛丝马迹 '
when '2031041' then '收集12份魔法晶粉 '
when '2031042' then '点亮魔灯 '
when '2031051' then '回忆幻影 '
when '2031171' then '找到格尔达 '
when '2031181' then '采集蘑菇 '
when '2031182' then '制作蘑菇汤 '
when '2031211' then '将蘑菇汤交给格尔达 '
when '2031061' then '救出格尔达 '
when '2031141' then '前往格尔达指引的位置 '
when '2031071' then '收集12份魔法晶粉 '
when '2031072' then '点亮魔灯 '
when '2031081' then '回忆幻影 '
when '2031151' then '追逐冰雪女王和凯伊的线索 '
when '2031091' then '收集12份魔法晶粉 '
when '2031092' then '点亮魔灯 '
when '2031101' then '回忆幻影 '
when '2031161' then '追逐冰雪女王和凯伊的线索 '
when '2031111' then '收集12份魔法晶粉 '
when '2031112' then '点亮魔灯 '
when '2031121' then '回忆幻影 '
when '2031131' then '前往回忆山峰 '
when '2032011' then '找到女巫住所 '
when '2032021' then '通过麦格的试炼-找到鹿即完成 '
when '2032031' then '修复水井-（支线任务） '
when '2032041' then '向鹿询问上山的路-驯化鹿 '
when '2032051' then '找到雪人 '
when '2032061' then '找到雪人的鼻子 '
when '2032063' then '获取雪人的鼻子 '
when '2032062' then '修复雪人 '
when '2032071' then '制作冰柱上山-第二层 '
when '2032081' then '继续前进-遇到第一个巨人 '
when '2032091' then '修复避雪柱-修复第一个避雪柱 '
when '2032101' then '驯化巨人1 '
when '2032111' then '继续前进-遇到第二个巨人 '
when '2032122' then '驯化守卫2 '
when '2032131' then '继续前进-遇到冰玫瑰 '
when '2032141' then '采集冰玫瑰 '
when '2032151' then '继续前进-遇到第三个巨人 '
when '2032161' then '修复第3个避雪柱 '
when '2032162' then '驯化守卫3 '
when '2032241' then '继续前进-到第2个冰梯 '
when '2032171' then '制作冰柱上山-顶层 '
when '2032181' then '找到记忆宝珠 '
when '2032182' then '获得记忆宝珠 '
when '2032191' then '制作魔盒 '
when '2032211' then '前往巨熊山谷 '
when '2033011' then '沿着脚印前进 '
when '2033021' then '修复断桥，追上强盗 '
when '2033091' then '沿着脚印追踪强盗（第一个冰桥后） '
when '2033031' then '点燃篝火，恢复体力 '
when '2033101' then '沿着脚印追踪强盗（篝火） '
when '2033121' then '沿着脚印追踪强盗（葡萄园后） '
when '2033041' then '修复断桥，追上强盗 '
when '2033111' then '沿着脚印追踪强盗（第二个冰桥后） '
when '2033051' then '守猎熊 '
when '2033052' then '获取3份熊毛 '
when '2033061' then '制作变化药剂 '
when '2033131' then '点击雪橇，准备出发 '
when '2033081' then '前往静河 '
when '2034001' then '寻找哈斯曼 '
when '2034011' then '寻找冰窟窿，去钓鱼吧 '
when '2034021' then '修复桥梁 '
when '2034031' then '寻找修桥工具 '
when '2034041' then '寻找邮箱 '
when '2034042' then '获得哈斯曼夫人的信件 '
when '2034051' then '将信件交付给哈斯曼 '
when '2034055' then '找到河对岸的脚印 '
when '2034062' then '消灭第一只狼 '
when '2034063' then '消灭第二只狼 '
when '2034064' then '消灭第三只狼 '
when '2034065' then '找到鹿的脚印 '
when '2034066' then '找到麋鹿 '
when '2034061' then '驯化麋鹿 '
when '2034071' then '前往冰雪城堡 '
end as '任务名称',
接受任务账户数,
完成任务账户数,
`任务完成率%`,
`任务转化率%`,
`总体任务转化率%`,
`账户平均完成任务时间(分钟)`,
接受任务账户平均等级,
完成任务账户平均等级
from
(
select  task_group_id, task_id, 
count(distinct user_id) as '接受任务账户数',
count(`任务完成时长(分钟)`) as '完成任务账户数',
round(count(`任务完成时长(分钟)`)/(first_value(count(`任务完成时长(分钟)`) ) over (order by count(`任务完成时长(分钟)`) desc ) )*100,2) as '总体任务转化率%',
round(count(`任务完成时长(分钟)`)/count(distinct user_id)*100,2) as '任务完成率%'
from 
(select l1.task_group_id, l1.task_id, l1.user_id, 
round(avg(complete_time-accept_time)/60000,2) as '任务完成时长(分钟)', 
avg(accpet_level) as 'accpet_level',
avg(complete_level) as 'complete_level'
from 
(
select task_group_id, task_id, user_id, avg(log_time) as 'accept_time',  
avg(role_level) as 'accpet_level'
from fairy_town_server.server_task_accept
where day_time between ${beginDate} and ${endDate} and server_id in (${serverIds}) 
and task_group_id in 
(
'100201',
'100203',
'100204',
'100301',
'100401',
'201101',
'201102',
'201103',
'201104',
'201105',
'201106',
'201107',
'201108',
'201109',
'201110',
'201111',
'201112',
'201113',
'201114',
'201115',
'201117',
'201116',
'201200',
'201201',
'201202',
'201203',
'201204',
'201205',
'201206',
'201207',
'201208',
'201209',
'201210',
'201300',
'201301',
'201302',
'201303',
'201314',
'201305',
'201306',
'201307',
'201308',
'201309',
'201310',
'201312',
'201311',
'202101',
'202102',
'202103',
'202104',
'202106',
'202107',
'202108',
'202109',
'202201',
'202202',
'202203',
'202205',
'202204',
'202207',
'202206',
'202209',
'202208',
'202211',
'202210',
'202212',
'202301',
'202302',
'202303',
'202304',
'202305',
'202306',
'202316',
'202307',
'202308',
'202309',
'202310',
'202311',
'202312',
'202313',
'202314',
'202315',
'202401',
'202402',
'202404',
'202419',
'202405',
'202403',
'202406',
'202407',
'202418',
'202408',
'202409',
'202410',
'202420',
'202412',
'202415',
'202421',
'202414',
'202416',
'202417',
'202501',
'202502',
'202503',
'202504',
'202505',
'202511',
'202510',
'202507',
'202508',
'202509',
'202512',
'203101',
'203102',
'203103',
'203104',
'203105',
'203117',
'203118',
'203121',
'203106',
'203114',
'203107',
'203108',
'203115',
'203109',
'203110',
'203116',
'203111',
'203112',
'203113',
'203201',
'203202',
'203203',
'203204',
'203205',
'203206',
'203207',
'203208',
'203209',
'203210',
'203211',
'203222',
'203213',
'203214',
'203215',
'203216',
'203223',
'203224',
'203217',
'203218',
'203219',
'203221',
'203301',
'203302',
'203309',
'203303',
'203310',
'203312',
'203304',
'203311',
'203305',
'203306',
'203313',
'203308',
'203401',
'203402',
'203403',
'203404',
'203405',
'203406',
'203410',
'203411',
'203412',
'203407',
'203408'
)
group by task_group_id, task_id, user_id
)l1
left join
(
select task_group_id, task_id, user_id, avg(log_time) as 'complete_time',
avg(role_level) as 'complete_level'
from fairy_town_server.server_task_completed
where day_time between ${beginDate} and ${endDate} and server_id in (${serverIds}) 
and task_group_id in 
(
'100201',
'100203',
'100204',
'100301',
'100401',
'201101',
'201102',
'201103',
'201104',
'201105',
'201106',
'201107',
'201108',
'201109',
'201110',
'201111',
'201112',
'201113',
'201114',
'201115',
'201117',
'201116',
'201200',
'201201',
'201202',
'201203',
'201204',
'201205',
'201206',
'201207',
'201208',
'201209',
'201210',
'201300',
'201301',
'201302',
'201303',
'201314',
'201305',
'201306',
'201307',
'201308',
'201309',
'201310',
'201312',
'201311',
'202101',
'202102',
'202103',
'202104',
'202106',
'202107',
'202108',
'202109',
'202201',
'202202',
'202203',
'202205',
'202204',
'202207',
'202206',
'202209',
'202208',
'202211',
'202210',
'202212',
'202301',
'202302',
'202303',
'202304',
'202305',
'202306',
'202316',
'202307',
'202308',
'202309',
'202310',
'202311',
'202312',
'202313',
'202314',
'202315',
'202401',
'202402',
'202404',
'202419',
'202405',
'202403',
'202406',
'202407',
'202418',
'202408',
'202409',
'202410',
'202420',
'202412',
'202415',
'202421',
'202414',
'202416',
'202417',
'202501',
'202502',
'202503',
'202504',
'202505',
'202511',
'202510',
'202507',
'202508',
'202509',
'202512',
'203101',
'203102',
'203103',
'203104',
'203105',
'203117',
'203118',
'203121',
'203106',
'203114',
'203107',
'203108',
'203115',
'203109',
'203110',
'203116',
'203111',
'203112',
'203113',
'203201',
'203202',
'203203',
'203204',
'203205',
'203206',
'203207',
'203208',
'203209',
'203210',
'203211',
'203222',
'203213',
'203214',
'203215',
'203216',
'203223',
'203224',
'203217',
'203218',
'203219',
'203221',
'203301',
'203302',
'203309',
'203303',
'203310',
'203312',
'203304',
'203311',
'203305',
'203306',
'203313',
'203308',
'203401',
'203402',
'203403',
'203404',
'203405',
'203406',
'203410',
'203411',
'203412',
'203407',
'203408'
)
group by task_group_id, task_id, user_id
)l2 on l1.task_group_id=l2.task_group_id and l1.task_id=l2.task_id and l1.user_id=l2.user_id
group by l1.task_group_id, l1.task_id, l1.user_id) list
group by task_group_id, task_id
)ta1
left join
(
select l1.task_id as 'task_id', 
ifnull(round(l1.完成任务账户数/l2.完成任务账户数*100,2),100) as '任务转化率%'
from
(select id, task_id, 完成任务账户数
from
(select (ROW_NUMBER() OVER (order by count(`任务完成时长(分钟)`) desc))-1 as 'id',
task_group_id, task_id, 
count(distinct user_id) as '接受任务账户数',
count(`任务完成时长(分钟)`) as '完成任务账户数',
round(count(`任务完成时长(分钟)`)/count(distinct user_id)*100,2) as '任务完成率%',
round(avg(`任务完成时长(分钟)`),2) as '任务完成时长(分钟)',
round(avg(accpet_level),2) as '接受任务账户平均等级',
round(avg(complete_level),2) as '完成任务账户平均等级'
from 
(select l1.task_group_id, l1.task_id, l1.user_id, 
round(avg(complete_time-accept_time)/60000,2) as '任务完成时长(分钟)', 
avg(accpet_level) as 'accpet_level',
avg(complete_level) as 'complete_level'
from 
(
select task_group_id, task_id, user_id, avg(log_time) as 'accept_time',  
avg(role_level) as 'accpet_level'
from fairy_town_server.server_task_accept
where day_time between ${beginDate} and ${endDate} and server_id in (${serverIds}) 
and task_group_id in 
(
'100201',
'100203',
'100204',
'100301',
'100401',
'201101',
'201102',
'201103',
'201104',
'201105',
'201106',
'201107',
'201108',
'201109',
'201110',
'201111',
'201112',
'201113',
'201114',
'201115',
'201117',
'201116',
'201200',
'201201',
'201202',
'201203',
'201204',
'201205',
'201206',
'201207',
'201208',
'201209',
'201210',
'201300',
'201301',
'201302',
'201303',
'201314',
'201305',
'201306',
'201307',
'201308',
'201309',
'201310',
'201312',
'201311',
'202101',
'202102',
'202103',
'202104',
'202106',
'202107',
'202108',
'202109',
'202201',
'202202',
'202203',
'202205',
'202204',
'202207',
'202206',
'202209',
'202208',
'202211',
'202210',
'202212',
'202301',
'202302',
'202303',
'202304',
'202305',
'202306',
'202316',
'202307',
'202308',
'202309',
'202310',
'202311',
'202312',
'202313',
'202314',
'202315',
'202401',
'202402',
'202404',
'202419',
'202405',
'202403',
'202406',
'202407',
'202418',
'202408',
'202409',
'202410',
'202420',
'202412',
'202415',
'202421',
'202414',
'202416',
'202417',
'202501',
'202502',
'202503',
'202504',
'202505',
'202511',
'202510',
'202507',
'202508',
'202509',
'202512',
'203101',
'203102',
'203103',
'203104',
'203105',
'203117',
'203118',
'203121',
'203106',
'203114',
'203107',
'203108',
'203115',
'203109',
'203110',
'203116',
'203111',
'203112',
'203113',
'203201',
'203202',
'203203',
'203204',
'203205',
'203206',
'203207',
'203208',
'203209',
'203210',
'203211',
'203222',
'203213',
'203214',
'203215',
'203216',
'203223',
'203224',
'203217',
'203218',
'203219',
'203221',
'203301',
'203302',
'203309',
'203303',
'203310',
'203312',
'203304',
'203311',
'203305',
'203306',
'203313',
'203308',
'203401',
'203402',
'203403',
'203404',
'203405',
'203406',
'203410',
'203411',
'203412',
'203407',
'203408'
)
group by task_group_id, task_id, user_id
)l1
left join
(
select task_group_id, task_id, user_id, avg(log_time) as 'complete_time',
avg(role_level) as 'complete_level'
from fairy_town_server.server_task_completed
where day_time between ${beginDate} and ${endDate} and server_id in (${serverIds}) 
and task_group_id in 
(
'100201',
'100203',
'100204',
'100301',
'100401',
'201101',
'201102',
'201103',
'201104',
'201105',
'201106',
'201107',
'201108',
'201109',
'201110',
'201111',
'201112',
'201113',
'201114',
'201115',
'201117',
'201116',
'201200',
'201201',
'201202',
'201203',
'201204',
'201205',
'201206',
'201207',
'201208',
'201209',
'201210',
'201300',
'201301',
'201302',
'201303',
'201314',
'201305',
'201306',
'201307',
'201308',
'201309',
'201310',
'201312',
'201311',
'202101',
'202102',
'202103',
'202104',
'202106',
'202107',
'202108',
'202109',
'202201',
'202202',
'202203',
'202205',
'202204',
'202207',
'202206',
'202209',
'202208',
'202211',
'202210',
'202212',
'202301',
'202302',
'202303',
'202304',
'202305',
'202306',
'202316',
'202307',
'202308',
'202309',
'202310',
'202311',
'202312',
'202313',
'202314',
'202315',
'202401',
'202402',
'202404',
'202419',
'202405',
'202403',
'202406',
'202407',
'202418',
'202408',
'202409',
'202410',
'202420',
'202412',
'202415',
'202421',
'202414',
'202416',
'202417',
'202501',
'202502',
'202503',
'202504',
'202505',
'202511',
'202510',
'202507',
'202508',
'202509',
'202512',
'203101',
'203102',
'203103',
'203104',
'203105',
'203117',
'203118',
'203121',
'203106',
'203114',
'203107',
'203108',
'203115',
'203109',
'203110',
'203116',
'203111',
'203112',
'203113',
'203201',
'203202',
'203203',
'203204',
'203205',
'203206',
'203207',
'203208',
'203209',
'203210',
'203211',
'203222',
'203213',
'203214',
'203215',
'203216',
'203223',
'203224',
'203217',
'203218',
'203219',
'203221',
'203301',
'203302',
'203309',
'203303',
'203310',
'203312',
'203304',
'203311',
'203305',
'203306',
'203313',
'203308',
'203401',
'203402',
'203403',
'203404',
'203405',
'203406',
'203410',
'203411',
'203412',
'203407',
'203408'
)
group by task_group_id, task_id, user_id
)l2 on l1.task_group_id=l2.task_group_id and l1.task_id=l2.task_id and l1.user_id=l2.user_id
group by l1.task_group_id, l1.task_id, l1.user_id) list
group by task_group_id, task_id
) t1
) l1
left join
(select id, task_id, 完成任务账户数
from
(select ROW_NUMBER() OVER (order by count(`任务完成时长(分钟)`) desc ) as 'id',
task_group_id, task_id, 
count(distinct user_id) as '接受任务账户数',
count(`任务完成时长(分钟)`) as '完成任务账户数',
round(count(`任务完成时长(分钟)`)/count(distinct user_id)*100,2) as '任务完成率%',
round(avg(`任务完成时长(分钟)`),2) as '任务完成时长(分钟)',
round(avg(accpet_level),2) as '接受任务账户平均等级',
round(avg(complete_level),2) as '完成任务账户平均等级'
from 
(select l1.task_group_id, l1.task_id, l1.user_id, 
round(avg(complete_time-accept_time)/60000,2) as '任务完成时长(分钟)', 
avg(accpet_level) as 'accpet_level',
avg(complete_level) as 'complete_level'
from 
(
select task_group_id, task_id, user_id, avg(log_time) as 'accept_time',  
avg(role_level) as 'accpet_level'
from fairy_town_server.server_task_accept
where day_time between ${beginDate} and ${endDate} and server_id in (${serverIds}) 
and task_group_id in 
(
'100201',
'100203',
'100204',
'100301',
'100401',
'201101',
'201102',
'201103',
'201104',
'201105',
'201106',
'201107',
'201108',
'201109',
'201110',
'201111',
'201112',
'201113',
'201114',
'201115',
'201117',
'201116',
'201200',
'201201',
'201202',
'201203',
'201204',
'201205',
'201206',
'201207',
'201208',
'201209',
'201210',
'201300',
'201301',
'201302',
'201303',
'201314',
'201305',
'201306',
'201307',
'201308',
'201309',
'201310',
'201312',
'201311',
'202101',
'202102',
'202103',
'202104',
'202106',
'202107',
'202108',
'202109',
'202201',
'202202',
'202203',
'202205',
'202204',
'202207',
'202206',
'202209',
'202208',
'202211',
'202210',
'202212',
'202301',
'202302',
'202303',
'202304',
'202305',
'202306',
'202316',
'202307',
'202308',
'202309',
'202310',
'202311',
'202312',
'202313',
'202314',
'202315',
'202401',
'202402',
'202404',
'202419',
'202405',
'202403',
'202406',
'202407',
'202418',
'202408',
'202409',
'202410',
'202420',
'202412',
'202415',
'202421',
'202414',
'202416',
'202417',
'202501',
'202502',
'202503',
'202504',
'202505',
'202511',
'202510',
'202507',
'202508',
'202509',
'202512',
'203101',
'203102',
'203103',
'203104',
'203105',
'203117',
'203118',
'203121',
'203106',
'203114',
'203107',
'203108',
'203115',
'203109',
'203110',
'203116',
'203111',
'203112',
'203113',
'203201',
'203202',
'203203',
'203204',
'203205',
'203206',
'203207',
'203208',
'203209',
'203210',
'203211',
'203222',
'203213',
'203214',
'203215',
'203216',
'203223',
'203224',
'203217',
'203218',
'203219',
'203221',
'203301',
'203302',
'203309',
'203303',
'203310',
'203312',
'203304',
'203311',
'203305',
'203306',
'203313',
'203308',
'203401',
'203402',
'203403',
'203404',
'203405',
'203406',
'203410',
'203411',
'203412',
'203407',
'203408'
)
group by task_group_id, task_id, user_id
)l1
left join
(
select task_group_id, task_id, user_id, avg(log_time) as 'complete_time',
avg(role_level) as 'complete_level'
from fairy_town_server.server_task_completed
where day_time between ${beginDate} and ${endDate} and server_id in (${serverIds}) 
and task_group_id in 
(
'100201',
'100203',
'100204',
'100301',
'100401',
'201101',
'201102',
'201103',
'201104',
'201105',
'201106',
'201107',
'201108',
'201109',
'201110',
'201111',
'201112',
'201113',
'201114',
'201115',
'201117',
'201116',
'201200',
'201201',
'201202',
'201203',
'201204',
'201205',
'201206',
'201207',
'201208',
'201209',
'201210',
'201300',
'201301',
'201302',
'201303',
'201314',
'201305',
'201306',
'201307',
'201308',
'201309',
'201310',
'201312',
'201311',
'202101',
'202102',
'202103',
'202104',
'202106',
'202107',
'202108',
'202109',
'202201',
'202202',
'202203',
'202205',
'202204',
'202207',
'202206',
'202209',
'202208',
'202211',
'202210',
'202212',
'202301',
'202302',
'202303',
'202304',
'202305',
'202306',
'202316',
'202307',
'202308',
'202309',
'202310',
'202311',
'202312',
'202313',
'202314',
'202315',
'202401',
'202402',
'202404',
'202419',
'202405',
'202403',
'202406',
'202407',
'202418',
'202408',
'202409',
'202410',
'202420',
'202412',
'202415',
'202421',
'202414',
'202416',
'202417',
'202501',
'202502',
'202503',
'202504',
'202505',
'202511',
'202510',
'202507',
'202508',
'202509',
'202512',
'203101',
'203102',
'203103',
'203104',
'203105',
'203117',
'203118',
'203121',
'203106',
'203114',
'203107',
'203108',
'203115',
'203109',
'203110',
'203116',
'203111',
'203112',
'203113',
'203201',
'203202',
'203203',
'203204',
'203205',
'203206',
'203207',
'203208',
'203209',
'203210',
'203211',
'203222',
'203213',
'203214',
'203215',
'203216',
'203223',
'203224',
'203217',
'203218',
'203219',
'203221',
'203301',
'203302',
'203309',
'203303',
'203310',
'203312',
'203304',
'203311',
'203305',
'203306',
'203313',
'203308',
'203401',
'203402',
'203403',
'203404',
'203405',
'203406',
'203410',
'203411',
'203412',
'203407',
'203408'
)
group by task_group_id, task_id, user_id
)l2 on l1.task_group_id=l2.task_group_id and l1.task_id=l2.task_id and l1.user_id=l2.user_id
group by l1.task_group_id, l1.task_id, l1.user_id) list
group by task_group_id, task_id
)t2
)l2 on l1.id=l2.id
)ta2
on ta1.task_id=ta2.task_id
left join
(
select task_group_id, 
task_id,
round(avg(账户完成任务时间)/60000,2) as '账户平均完成任务时间(分钟)',
round(avg(accept_level),2) as '接受任务账户平均等级',
round(avg(complete_level),2) as '完成任务账户平均等级'
from
(
select task_group_id, task_id, user_id, avg(time_interval) as '账户完成任务时间',
avg(accept_level) as 'accept_level',
avg(complete_level) as 'complete_level'
from
(
select task_group_id, task_id, user_id, accept_time, 
min(complete_time-accept_time) as 'time_interval',
avg(accept_level) as 'accept_level',
avg(complete_level) as 'complete_level'
from
(
SELECT a.task_group_id, a.task_id, a.user_id, 
a.log_time as 'accept_time', c.log_time as 'complete_time',
avg(a.role_level) as 'accept_level', avg(c.role_level) as 'complete_level'
FROM fairy_town_server.server_task_accept a
left join fairy_town_server.server_task_completed c
on a.task_group_id=c.task_group_id and a.task_id=c.task_id 
and a.user_id=c.user_id 
where a.day_time between ${beginDate} and ${endDate} and a.server_id in (${serverIds})
and c.day_time between ${beginDate} and ${endDate} and c.server_id in (${serverIds})
group by a.task_group_id, a.task_id, a.user_id, a.log_time, c.log_time
)l1 
where complete_time>accept_time
group by task_group_id, task_id, user_id, accept_time
)l2
group by task_group_id, task_id, user_id
)l3
group by task_group_id, task_id
)ta3 on ta1.task_group_id=ta3.task_group_id and ta1.task_id=ta3.task_id
order by 完成任务账户数 desc
